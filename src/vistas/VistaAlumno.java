/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package vistas;

import java.time.LocalDate;
import entidades.Alumno;
import java.time.ZoneId;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import persistencia.AlumnoData;
import persistencia.MiConexion;
/**
 *
 * @author pc
 */
public class VistaAlumno extends javax.swing.JInternalFrame {

    /**
     * Creates new form CargarAlumno
     */
    MiConexion conex = new MiConexion("jdbc:mariadb://localhost:3306/ulp2025gp9", "root", "");
    AlumnoData alumnoD = new AlumnoData(conex);
    private DefaultTableModel modeloTabla= new DefaultTableModel();
    public VistaAlumno() {
        initComponents();
        cargarCombo();
        tablaCabecera();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        bgBotones = new javax.swing.ButtonGroup();
        jLabel1 = new javax.swing.JLabel();
        jlDni = new javax.swing.JLabel();
        jlApellido = new javax.swing.JLabel();
        jlNombre = new javax.swing.JLabel();
        jlFecha = new javax.swing.JLabel();
        jlEstado = new javax.swing.JLabel();
        jbGuardar = new javax.swing.JButton();
        jtfDni = new javax.swing.JTextField();
        jtfApellido = new javax.swing.JTextField();
        jtfNombre = new javax.swing.JTextField();
        jbLimpiar = new javax.swing.JButton();
        jrbActivo = new javax.swing.JRadioButton();
        jrbInactivo = new javax.swing.JRadioButton();
        cbMetodos = new javax.swing.JComboBox<>();
        jlSeleccione = new javax.swing.JLabel();
        jlIdAlumno = new javax.swing.JLabel();
        jtfIdAlumno = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableAlumno = new javax.swing.JTable();
        jdcFecha = new com.toedter.calendar.JDateChooser();
        jbActualizar = new javax.swing.JButton();
        jbEliminar = new javax.swing.JButton();
        jbAlta_baja = new javax.swing.JButton();
        jbBuscar = new javax.swing.JButton();
        jbListar = new javax.swing.JButton();

        setBackground(new java.awt.Color(102, 102, 102));
        setBorder(javax.swing.BorderFactory.createEtchedBorder(new java.awt.Color(0, 102, 0), new java.awt.Color(0, 102, 0)));

        jLabel1.setFont(new java.awt.Font("Leelawadee UI", 1, 24)); // NOI18N
        jLabel1.setText("Complete los datos");

        jlDni.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        jlDni.setText("Dni:");

        jlApellido.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        jlApellido.setText("Apellido:");

        jlNombre.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        jlNombre.setText("Nombre:");

        jlFecha.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        jlFecha.setText("Fecha:");
        jlFecha.setAlignmentX(0.1F);

        jlEstado.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        jlEstado.setText("Estado:");

        jbGuardar.setBackground(new java.awt.Color(0, 102, 0));
        jbGuardar.setForeground(new java.awt.Color(255, 255, 255));
        jbGuardar.setText("Cargar");
        jbGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbGuardarActionPerformed(evt);
            }
        });

        jtfDni.setBackground(new java.awt.Color(255, 255, 255));
        jtfDni.setEnabled(false);
        jtfDni.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtfDniActionPerformed(evt);
            }
        });

        jtfApellido.setBackground(new java.awt.Color(255, 255, 255));
        jtfApellido.setEnabled(false);
        jtfApellido.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtfApellidoActionPerformed(evt);
            }
        });

        jtfNombre.setBackground(new java.awt.Color(255, 255, 255));
        jtfNombre.setEnabled(false);

        jbLimpiar.setBackground(new java.awt.Color(0, 102, 0));
        jbLimpiar.setForeground(new java.awt.Color(255, 255, 255));
        jbLimpiar.setText("Limpiar");
        jbLimpiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbLimpiarActionPerformed(evt);
            }
        });

        bgBotones.add(jrbActivo);
        jrbActivo.setText("Activo");
        jrbActivo.setEnabled(false);
        jrbActivo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jrbActivoActionPerformed(evt);
            }
        });

        bgBotones.add(jrbInactivo);
        jrbInactivo.setText("Inactivo");
        jrbInactivo.setEnabled(false);

        cbMetodos.setBackground(new java.awt.Color(255, 255, 255));
        cbMetodos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbMetodosActionPerformed(evt);
            }
        });

        jlSeleccione.setText("Seleccione");

        jlIdAlumno.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        jlIdAlumno.setText("idAlumno: ");

        jtfIdAlumno.setBackground(new java.awt.Color(255, 255, 255));
        jtfIdAlumno.setEnabled(false);

        jTableAlumno.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTableAlumno);

        jbActualizar.setBackground(new java.awt.Color(0, 102, 0));
        jbActualizar.setForeground(new java.awt.Color(255, 255, 255));
        jbActualizar.setText("Actualizar");
        jbActualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbActualizarActionPerformed(evt);
            }
        });

        jbEliminar.setBackground(new java.awt.Color(0, 102, 0));
        jbEliminar.setForeground(new java.awt.Color(255, 255, 255));
        jbEliminar.setText("Eliminar");

        jbAlta_baja.setBackground(new java.awt.Color(0, 102, 0));
        jbAlta_baja.setForeground(new java.awt.Color(255, 255, 255));
        jbAlta_baja.setText("Baja/Alta");
        jbAlta_baja.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbAlta_bajaActionPerformed(evt);
            }
        });

        jbBuscar.setBackground(new java.awt.Color(0, 102, 0));
        jbBuscar.setForeground(new java.awt.Color(255, 255, 255));
        jbBuscar.setText("Buscar");

        jbListar.setBackground(new java.awt.Color(0, 102, 0));
        jbListar.setForeground(new java.awt.Color(255, 255, 255));
        jbListar.setText("Listar");
        jbListar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbListarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 683, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 30, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jbGuardar, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jbActualizar)
                                .addGap(18, 18, 18)
                                .addComponent(jbEliminar))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jlIdAlumno)
                                    .addGap(18, 18, 18)
                                    .addComponent(jtfIdAlumno))
                                .addGroup(layout.createSequentialGroup()
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jlApellido)
                                        .addComponent(jlFecha))
                                    .addGap(30, 30, 30)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jtfApellido)
                                        .addComponent(jdcFecha, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                                .addGroup(layout.createSequentialGroup()
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel1)
                                        .addGroup(layout.createSequentialGroup()
                                            .addComponent(jlSeleccione)
                                            .addGap(18, 18, 18)
                                            .addComponent(cbMetodos, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addGap(56, 56, 56))))
                        .addGap(13, 13, 13)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(17, 17, 17)
                                        .addComponent(jlEstado)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(jrbActivo, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jbAlta_baja, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(jbBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(jbListar, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(jbLimpiar, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(0, 0, Short.MAX_VALUE)
                                        .addComponent(jrbInactivo, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(13, 13, 13)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jlDni)
                                            .addComponent(jlNombre))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jtfNombre)
                                            .addComponent(jtfDni))))
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addComponent(jLabel1)
                .addGap(23, 23, 23)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jlSeleccione)
                    .addComponent(cbMetodos, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jlIdAlumno)
                    .addComponent(jtfIdAlumno, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jtfDni, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jlDni))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jlApellido)
                    .addComponent(jtfApellido, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jtfNombre, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jlNombre))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jlFecha, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jlEstado)
                            .addComponent(jrbActivo)
                            .addComponent(jrbInactivo)))
                    .addComponent(jdcFecha, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(29, 29, 29)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jbGuardar)
                    .addComponent(jbLimpiar, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jbActualizar)
                    .addComponent(jbEliminar)
                    .addComponent(jbAlta_baja)
                    .addComponent(jbBuscar)
                    .addComponent(jbListar))
                .addContainerGap(18, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jtfDniActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtfDniActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jtfDniActionPerformed

    private void jbGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbGuardarActionPerformed
        try {   
        int dni = Integer.parseInt(jtfDni.getText());
        String apellido = jtfApellido.getText();
        String nombre = jtfNombre.getText();
        LocalDate fecha = jdcFecha.getDate().toInstant().atZone(ZoneId.systemDefault()).toLocalDate();
        Boolean estado;
        if(jrbActivo.isSelected()){
            estado = true;
        }else{
            estado = false;    
        }
        
         if (!jrbInactivo.isSelected()||jrbActivo.isSelected()) {
               JOptionPane.showMessageDialog(this, "No tiene estado alguno");
               return;
           }
        
        Alumno alumno = new Alumno(dni, apellido, nombre, fecha, estado);
            if (alumnoD.alumnoNuevo(alumno)) {
                JOptionPane.showMessageDialog(this, "Alumno guardado");
            } else {
                JOptionPane.showMessageDialog(this, "El alumno ya existe");
            }
 
        }catch(NumberFormatException e){
            JOptionPane.showMessageDialog(this, "Error, formato incorrecto");
        }        
        
//            //Validacion de campos vacios
//            if(jtfDni.getText().trim().isEmpty() || jtfApellido.getText().trim().isEmpty() ||
//                jtfNombre.getText().trim().isEmpty() || jdcFecha.getDate() == null){
//                JOptionPane.showMessageDialog(this, "Los campos no pueden estar vacios");
//                return;
//            }
    }//GEN-LAST:event_jbGuardarActionPerformed

    private void jtfApellidoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtfApellidoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jtfApellidoActionPerformed

    private void jbLimpiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbLimpiarActionPerformed
        jtfDni.setText("");
        jtfApellido.setText("");
        jtfNombre.setText("");
        jdcFecha.setDate(null);
        //solo funciona sin el boton de grupo
        jrbActivo.setSelected(false);
        jrbInactivo.setSelected(false);
    }//GEN-LAST:event_jbLimpiarActionPerformed

    private void jrbActivoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jrbActivoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jrbActivoActionPerformed

    private void cbMetodosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbMetodosActionPerformed
        //Dependiendo de que seleccione se activan y desactivan x campos
        String opciones = (String)cbMetodos.getSelectedItem();
        
        switch(opciones){
            case "Cargar Alumno":
                jtfDni.setEnabled(true);
                jtfApellido.setEnabled(true);
                jtfNombre.setEnabled(true);
                jdcFecha.setEnabled(true);
                jrbActivo.setEnabled(true);
                jrbInactivo.setEnabled(true);
                jbActualizar.setEnabled(false);
                jbAlta_baja.setEnabled(false);
                jbBuscar.setEnabled(false);
                jbEliminar.setEnabled(false);
                jbListar.setEnabled(false);
                jbGuardar.setEnabled(true);
                
                break;
            case "Actualizar":
                jtfDni.setEnabled(true);
                jtfApellido.setEnabled(true);
                jtfNombre.setEnabled(true);
                jdcFecha.setEnabled(true);
                jrbActivo.setEnabled(true);
                jrbInactivo.setEnabled(true); 
                jbGuardar.setEnabled(false);
                jbAlta_baja.setEnabled(false);
                jbBuscar.setEnabled(false);
                jbEliminar.setEnabled(false);
                jbListar.setEnabled(false);
                jbActualizar.setEnabled(true);
                break;
                
            case "Borrar":
                jtfIdAlumno.setEnabled(true);
                jtfDni.setEnabled(false);
                jtfApellido.setEnabled(false);
                jtfNombre.setEnabled(false);
                jdcFecha.setEnabled(false);
                jrbActivo.setEnabled(false);
                jrbInactivo.setEnabled(false);
                jbGuardar.setEnabled(false);
                jbAlta_baja.setEnabled(false);
                jbBuscar.setEnabled(false);
                jbActualizar.setEnabled(false);
                jbListar.setEnabled(false);
                jbEliminar.setEnabled(true);
                
                break;
                
            case "Baja / alta logica":
                jtfIdAlumno.setEnabled(true);
                jtfDni.setEnabled(false);
                jtfApellido.setEnabled(false);
                jtfNombre.setEnabled(false);
                jdcFecha.setEnabled(false);
                jrbActivo.setEnabled(true);
                jrbInactivo.setEnabled(true);
                jbGuardar.setEnabled(false);
                jbActualizar.setEnabled(false);
                jbBuscar.setEnabled(false);
                jbEliminar.setEnabled(false);
                jbListar.setEnabled(false);
                jbAlta_baja.setEnabled(true);
                break;
            case "Buscar":
                jtfIdAlumno.setEnabled(true);
                jtfDni.setEnabled(false);
                jtfApellido.setEnabled(false);
                jtfNombre.setEnabled(false);
                jdcFecha.setEnabled(false);
                jrbActivo.setEnabled(false);
                jrbInactivo.setEnabled(false);
                jbGuardar.setEnabled(false);
                jbAlta_baja.setEnabled(false);
                jbActualizar.setEnabled(false);
                jbEliminar.setEnabled(false);
                jbListar.setEnabled(false);
                jbBuscar.setEnabled(true);
                break;
                
            case "Listar":
                jtfIdAlumno.setEnabled(false);
                jtfDni.setEnabled(false);
                jtfApellido.setEnabled(false);
                jtfNombre.setEnabled(false);
                jdcFecha.setEnabled(false);
                jrbActivo.setEnabled(false);
                jrbInactivo.setEnabled(false);
                jbGuardar.setEnabled(false);
                jbAlta_baja.setEnabled(false);
                jbBuscar.setEnabled(false);
                jbEliminar.setEnabled(false);
                jbActualizar.setEnabled(false);
                jbListar.setEnabled(true);
                break;      
            }
    }//GEN-LAST:event_cbMetodosActionPerformed

    private void jbListarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbListarActionPerformed
        //Del rs traemos los traemos y agregamos a un arraylist,
        //luego los recorremos y asignamos a las filas de la tabla

        ArrayList<Alumno> listaAlumnos = new ArrayList();
        listaAlumnos = alumnoD.listarAlumnos();
        for(Alumno aux : listaAlumnos){
            modeloTabla.addRow(new Object [] {
                aux.getIdAlumno(),
                aux.getDni(),
                aux.getApellido(),
                aux.getNombre(),
                aux.getFechaNacimiento(),
                aux.isEstado()
            });
        }
        
       

    }//GEN-LAST:event_jbListarActionPerformed

    private void jbActualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbActualizarActionPerformed
          try {
            if (jtfDni.getText().trim().isEmpty() || jtfApellido.getText().trim().isEmpty()
                    || jtfNombre.getText().trim().isEmpty() || jdcFecha.getDate() == null) {
                JOptionPane.showMessageDialog(this, "No se puedo realizar la actulizacion. Los campos no pueden estar vacios");
                return;
            } else {
                JOptionPane.showMessageDialog(this, "Alumno actualizado correctamente");
            }

        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Error.");
        } catch (NullPointerException e) {
            JOptionPane.showMessageDialog(this, "Debe completar todos los campos");
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Error al actualizar: " + e.getMessage());
        }
    }//GEN-LAST:event_jbActualizarActionPerformed

    private void jbAlta_bajaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbAlta_bajaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jbAlta_bajaActionPerformed

    public void cargarCombo(){  
        cbMetodos.addItem("Cargar Alumno");
        cbMetodos.addItem("Actualizar");
        cbMetodos.addItem("Borrar");
        cbMetodos.addItem("Baja / alta logica");
        cbMetodos.addItem("Buscar");
        cbMetodos.addItem("Listar");
    }
    
    private void tablaCabecera(){
        modeloTabla.addColumn("IdAlumno");
        modeloTabla.addColumn("Dni");
        modeloTabla.addColumn("Apellido");
        modeloTabla.addColumn("Nombre");
        modeloTabla.addColumn("Fecha N.");
        modeloTabla.addColumn("Estado");
        jTableAlumno.setModel(modeloTabla);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup bgBotones;
    private javax.swing.JComboBox<String> cbMetodos;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTableAlumno;
    private javax.swing.JButton jbActualizar;
    private javax.swing.JButton jbAlta_baja;
    private javax.swing.JButton jbBuscar;
    private javax.swing.JButton jbEliminar;
    private javax.swing.JButton jbGuardar;
    private javax.swing.JButton jbLimpiar;
    private javax.swing.JButton jbListar;
    private com.toedter.calendar.JDateChooser jdcFecha;
    private javax.swing.JLabel jlApellido;
    private javax.swing.JLabel jlDni;
    private javax.swing.JLabel jlEstado;
    private javax.swing.JLabel jlFecha;
    private javax.swing.JLabel jlIdAlumno;
    private javax.swing.JLabel jlNombre;
    private javax.swing.JLabel jlSeleccione;
    private javax.swing.JRadioButton jrbActivo;
    private javax.swing.JRadioButton jrbInactivo;
    private javax.swing.JTextField jtfApellido;
    private javax.swing.JTextField jtfDni;
    private javax.swing.JTextField jtfIdAlumno;
    private javax.swing.JTextField jtfNombre;
    // End of variables declaration//GEN-END:variables
}
